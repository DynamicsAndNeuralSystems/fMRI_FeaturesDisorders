knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(reticulate)
use_python("/home/osboxes/anaconda3/bin/python3")
source_python("pickle_reader.py")
library(tidyverse)
library(reticulate)
use_python("/home/osboxes/anaconda3/bin/python3")
source_python("pickle_reader.py")
study <- "/media/sf_Shared_Folder/PhD_work/"
pydata_path <- paste0(study, "data/scz/UCLA/pydata/AROMA_2P/")
# Load subject metadata
subject_csv <- read.csv(paste0(study, "data/scz/UCLA/participants.csv"))
if (!file.exists(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))) {
pyspi_data_AROMA_2P_list <- list()
for (subject in unique(list.dirs(pydata_path, recursive = F, full.names = F))) {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl")) %>%
mutate(Subject_ID = subject,
group = subset(subject_csv, sampleID == subject) %>% pull(diagnosis))
pyspi_data_AROMA_2P_list <- rlist::list.append(pyspi_data_AROMA_2P_list,
subject_pkl)
}
pyspi_data_AROMA_2P <- do.call(plyr::rbind.fill, pyspi_data_AROMA_2P_list)
corr_data <- subset(pyspi_data_AROMA_2P, SPI == "xcorr_mean_sig-True")
saveRDS(pyspi_data_AROMA_2P, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))
saveRDS(corr_data, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
} else {
corr_data <- readRDS(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
}
n
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reticulate)
use_python("/home/osboxes/anaconda3/envs/pyspi/bin/python3")
source_python("pickle_reader.py")
study <- "/media/sf_Shared_Folder/PhD_work/"
pydata_path <- paste0(study, "data/scz/UCLA/pydata/AROMA_2P/")
# Load subject metadata
subject_csv <- read.csv(paste0(study, "data/scz/UCLA/participants.csv"))
library(tidyverse)
library(reticulate)
use_python("/home/osboxes/anaconda3/envs/pyspi/bin/python3")
source_python("pickle_reader.py")
study <- "/media/sf_Shared_Folder/PhD_work/"
pydata_path <- paste0(study, "data/scz/UCLA/pydata/AROMA_2P/")
output_data_path <- paste0(study, "data/scz/UCLA/pydata/R_files/")
# Load subject metadata
subject_csv <- read.csv(paste0(study, "data/scz/UCLA/participants.csv"))
if (!file.exists(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))) {
pyspi_data_AROMA_2P_list <- list()
for (subject in unique(list.dirs(pydata_path, recursive = F, full.names = F))) {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl")) %>%
mutate(Subject_ID = subject,
group = subset(subject_csv, sampleID == subject) %>% pull(diagnosis))
saveRDS(subject_pkl, file=oaste0(output_data_path, subject, "_pyspi.Rds"))
# pyspi_data_AROMA_2P_list <- rlist::list.append(pyspi_data_AROMA_2P_list,
#                                                subject_pkl)
}
# pyspi_data_AROMA_2P <- do.call(plyr::rbind.fill, pyspi_data_AROMA_2P_list)
# corr_data <- subset(pyspi_data_AROMA_2P, SPI == "xcorr_mean_sig-True")
# saveRDS(pyspi_data_AROMA_2P, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))
# saveRDS(corr_data, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
} # else {
if (!file.exists(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))) {
pyspi_data_AROMA_2P_list <- list()
for (subject in unique(list.dirs(pydata_path, recursive = F, full.names = F))) {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl")) %>%
mutate(Subject_ID = subject,
group = subset(subject_csv, sampleID == subject) %>% pull(diagnosis))
saveRDS(subject_pkl, file=paste0(output_data_path, subject, "_pyspi.Rds"))
# pyspi_data_AROMA_2P_list <- rlist::list.append(pyspi_data_AROMA_2P_list,
#                                                subject_pkl)
}
# pyspi_data_AROMA_2P <- do.call(plyr::rbind.fill, pyspi_data_AROMA_2P_list)
# corr_data <- subset(pyspi_data_AROMA_2P, SPI == "xcorr_mean_sig-True")
# saveRDS(pyspi_data_AROMA_2P, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))
# saveRDS(corr_data, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
} # else {
if (!file.exists(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))) {
pyspi_data_AROMA_2P_list <- list()
for (subject in unique(list.dirs(pydata_path, recursive = F, full.names = F))) {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl")) %>%
mutate(Subject_ID = subject,
group = subset(subject_csv, sampleID == subject) %>% pull(diagnosis))
saveRDS(subject_pkl, file=paste0(output_data_path, subject, "_pyspi.Rds"))
# pyspi_data_AROMA_2P_list <- rlist::list.append(pyspi_data_AROMA_2P_list,
#                                                subject_pkl)
}
# pyspi_data_AROMA_2P <- do.call(plyr::rbind.fill, pyspi_data_AROMA_2P_list)
# corr_data <- subset(pyspi_data_AROMA_2P, SPI == "xcorr_mean_sig-True")
# saveRDS(pyspi_data_AROMA_2P, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))
# saveRDS(corr_data, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
} # else {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl"))
setwd("~/")
setwd("/media/sf_Shared_Folder/github/fMRI_FeaturesDisorders/1_data_prep/pairwise")
knitr::opts_chunk$set(echo = TRUE)
if (!file.exists(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))) {
pyspi_data_AROMA_2P_list <- list()
for (subject in unique(list.dirs(pydata_path, recursive = F, full.names = F))) {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl")) %>%
mutate(Subject_ID = subject,
group = subset(subject_csv, sampleID == subject) %>% pull(diagnosis))
saveRDS(subject_pkl, file=paste0(output_data_path, subject, "_pyspi.Rds"))
# pyspi_data_AROMA_2P_list <- rlist::list.append(pyspi_data_AROMA_2P_list,
#                                                subject_pkl)
}
# pyspi_data_AROMA_2P <- do.call(plyr::rbind.fill, pyspi_data_AROMA_2P_list)
# corr_data <- subset(pyspi_data_AROMA_2P, SPI == "xcorr_mean_sig-True")
# saveRDS(pyspi_data_AROMA_2P, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))
# saveRDS(corr_data, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
} # else {
reticulate::use_python("/home/osboxes/anaconda3/envs/pyspi/bin/python3")
knitr::opts_chunk$set(echo = TRUE)
reticulate::use_python("/home/osboxes/anaconda3/envs/pyspi/bin/python3")
