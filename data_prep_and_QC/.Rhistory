univariate_feature_set <- "catch22"
github_dir <- "/headnode1/abry4213/github/fMRI_FeaturesDisorders/"
# univariate_feature_set <- "catch22"
github_dir <- "/headnode1/abry4213/github/"
rdata_path <- paste0(data_path, "processed_data/Rdata/")
data_path <- "/headnode1/abry4213/data/HCP100/"
dataset_ID <- "HCP100"
sample_metadata_file <- "UCLA_Schizophrenia_sample_metadata.Rds"
noise_procs <- c("AROMA+2P+GMR")
brain_region_lookup <- "Brain_Region_info.csv"
run_number=NULL
if (!is.null(run_number)) {
rdata_path <- paste0(data_path, "processed_data_run", run_number, "/Rdata/")
plot_dir <- paste0(data_path, "plots_run", run_number, "/")
} else {
rdata_path <- paste0(data_path, "processed_data/Rdata/")
plot_dir <- paste0(data_path, "plots/")
}
icesTAF::mkdir(plot_dir)
icesTAF::mkdir(rdata_path)
# Set the seed
set.seed(127)
# Load tidyverse
library(tidyverse)
library(theft)
# Unlist noise-processing methods
tryCatch({
noise_procs <- stringr::str_split(noise_procs, ";")[[1]]
noise_procs <- unlist(noise_procs)
}, error = function(e) {
message(e)
})
# Set working directory to file location
helper_script_dir = paste0(github_dir, "fMRI_FeaturesDisorders/helper_functions/")
source(paste0(helper_script_dir, "data_prep_and_QC/TS_feature_extraction.R"))
source(paste0(helper_script_dir, "data_prep_and_QC/QC_functions_univariate.R"))
# DIY rlist::list.append
list.append <- function (.data, ...)
{
if (is.list(.data)) {
c(.data, list(...))
}
else {
c(.data, ..., recursive = FALSE)
}
}
full_TS_data <- readRDS(paste0(data_path, "raw_data/",
dataset_ID, "_fMRI_TS.Rds"))
catch22_all_samples(full_TS_data = full_TS_data,
rdata_path = rdata_path,
dataset_ID = dataset_ID,
unique_columns = c("Sample_ID", "Brain_Region", "Noise_Proc"),
output_column_names = c("Sample_ID", "Brain_Region", "Noise_Proc"))
run_QC_for_univariate_dataset(data_path = data_path,
proc_rdata_path = rdata_path,
sample_metadata_file = sample_metadata_file,
dataset_ID = dataset_ID,
univariate_feature_set = univariate_feature_set,
raw_TS_file = paste0(data_path, "raw_data/",
dataset_ID, "_fMRI_TS.Rds"),
noise_procs = noise_procs,
plot_dir = plot_dir)
# HCP100
# data_path <- "/headnode1/abry4213/data/HCP100/"
# dataset_ID <- "HCP100"
sample_metadata_file <- "HCP100_sample_metadata.Rds"
setwd("~/github/fMRI_FeaturesDisorders/data_prep_and_QC")
subject_csv <- "HCP100_subject_info.csv"
metadata <- read.csv(paste0(data_path, subject_csv)) %>%
mutate(Sample_ID = gsub("_", "", Sample_ID))
saveRDS(metadata, file=paste0(data_path, sprintf("%s_sample_metadata.Rds",
dataset_ID)))
run_QC_for_univariate_dataset(data_path = data_path,
proc_rdata_path = rdata_path,
sample_metadata_file = sample_metadata_file,
dataset_ID = dataset_ID,
univariate_feature_set = univariate_feature_set,
raw_TS_file = paste0(data_path, "raw_data/",
dataset_ID, "_fMRI_TS.Rds"),
noise_procs = noise_procs,
plot_dir = plot_dir)
