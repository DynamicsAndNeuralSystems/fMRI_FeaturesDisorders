ggsave(paste0(plot_path, "UCLA_Schizophrenia_SPI_sig_boxplot.png"),
width = 8, height = 2.5, units="in", dpi=300)
plot_boxplot_shaded_null(dataset_ID = "ABIDE_ASD",
grouping_var_name = "Pairwise SPI",
main_data_by_repeat = ASD_SPI_main_repeats_sig,
fill_color = "chartreuse3",
wrap_length = 100,
null_mean_value = mean(ASD_SPI_null$balanced_accuracy, na.rm=T),
null_SD_value = sd(ASD_SPI_null$balanced_accuracy, na.rm=T))
ggsave(paste0(plot_path, "ABIDE_ASD_SPI_sig_boxplot.png"),
width = 8, height = 2.5, units="in", dpi=300)
plot_boxplot_shaded_null(dataset_ID = "UCLA_Schizophrenia",
grouping_var_name = "SPI +\nUnivariate Combo",
main_data_by_repeat = SCZ_SPI_combo_main_repeats_sig,
fill_color = "darkgoldenrod2",
wrap_length = 100,
null_mean_value = mean(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T),
null_SD_value = sd(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T))
ggsave(paste0(plot_path, "UCLA_Schizophrenia_SPI_combo_sig_boxplot.png"),
width = 7, height = 3, units="in", dpi=300)
plot_path <- paste0(github_dir, "plots/Manuscript_Draft/Figure4/")
TAF::mkdir(plot_path)
plot_SPI_with_without_univar(dataset_ID = "UCLA_Schizophrenia",
SPI_data_main_repeats = SCZ_SPI_main_repeats,
SPI_combo_data_main_repeats = SCZ_SPI_combo_main_repeats,
SPI_only_color = "chartreuse3",
SPI_univar_color = "darkgoldenrod2")
ggsave(paste0(plot_path, "Figure3/UCLA_Schizophrenia_SPI_With_vs_Without_Univariate.png"),
width = 7, height = 3, units = "in", dpi = 300)
plot_boxplot_shaded_null(dataset_ID = "ABIDE_ASD",
grouping_var_name = "SPI +\nUnivariate Combo",
main_data_by_repeat = SCZ_SPI_combo_main_repeats_sig,
fill_color = "darkgoldenrod2",
wrap_length = 100,
null_mean_value = mean(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T),
null_SD_value = sd(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T))
ggsave(paste0(plot_path, "ABIDE_ASD_SPI_combo_sig_boxplot.png"),
width = 7, height = 3, units="in", dpi=300)
# UCLA Schizophrenia
plot_boxplot_shaded_null(dataset_ID = "UCLA_Schizophrenia",
grouping_var_name = "SPI +\nUnivariate Combo",
main_data_by_repeat = SCZ_SPI_combo_main_repeats_sig,
fill_color = "darkgoldenrod2",
wrap_length = 100,
null_mean_value = mean(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T),
null_SD_value = sd(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T))
ggsave(paste0(plot_path, "UCLA_Schizophrenia_SPI_combo_sig_boxplot.png"),
width = 7, height = 3, units="in", dpi=300)
merged_SCZ_SPI_combo_data <- SCZ_SPI_data_main_repeats %>%
mutate(Analysis = "Pairwise SPI-wise") %>%
plyr::rbind.fill(., SCZ_SPI_combo_data_main_repeats %>%
mutate(Analysis = "Pairwise SPI + Univariate Combo-wise")) %>%
mutate(Analysis = factor(Analysis, levels = c("Pairwise SPI-wise",
"Pairwise SPI + Univariate Combo-wise")))
SCZ_SPI_pvals <- readRDS(paste0(SCZ_rdata_path,
sprintf("SPI_wise_CV_linear_SVM_model_permutation_null_%s_inv_prob_pvals.Rds",
pairwise_feature_set))) %>%
filter(Noise_Proc == noise_proc_SCZ) %>%
ungroup() %>%
mutate(bal_acc_p_adj_bonf = p.adjust(bal_acc_p, method="bonferroni")) %>%
dplyr::select(grouping_var, bal_acc_p, bal_acc_p_adj, bal_acc_p_adj_bonf)
ASD_SPI_pvals <- readRDS(paste0(ASD_rdata_path,
sprintf("SPI_wise_CV_linear_SVM_model_permutation_null_%s_inv_prob_pvals.Rds",
pairwise_feature_set))) %>%
filter(Noise_Proc == noise_proc_ASD) %>%
ungroup() %>%
mutate(bal_acc_p_adj_bonf = p.adjust(bal_acc_p, method="bonferroni")) %>%
dplyr::select(grouping_var, bal_acc_p, bal_acc_p_adj, bal_acc_p_adj_bonf)
SCZ_SPI_main_full <- readRDS(paste0(SCZ_rdata_path,
sprintf("SPI_wise_CV_linear_SVM_%s_inv_prob_balacc.Rds",
pairwise_feature_set))) %>%
filter(Noise_Proc == noise_proc_SCZ)
ASD_SPI_main_full <- readRDS(paste0(ASD_rdata_path,
sprintf("SPI_wise_CV_linear_SVM_%s_inv_prob_balacc.Rds",
pairwise_feature_set))) %>%
filter(Noise_Proc == noise_proc_ASD)
SCZ_SPI_main_repeats <- SCZ_SPI_main_full %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
dplyr::rename("balanced_accuracy" = "mean_balanced_accuracy") %>%
left_join(., SCZ_SPI_pvals) %>%
ungroup() %>%
mutate(grouping_var = fct_reorder(grouping_var,
balanced_accuracy,
.fun = mean))
SCZ_SPI_main_repeats_sig <- SCZ_SPI_main_repeats %>%
filter(bal_acc_p_adj < 0.05)
ASD_SPI_main_repeats <- ASD_SPI_main_full %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
dplyr::rename("balanced_accuracy" = "mean_balanced_accuracy") %>%
left_join(., ASD_SPI_pvals) %>%
ungroup() %>%
mutate(grouping_var = fct_reorder(grouping_var,
balanced_accuracy,
.fun = mean))
ASD_SPI_main_repeats_sig <- ASD_SPI_main_repeats %>%
filter(bal_acc_p_adj < 0.05)
merged_SCZ_SPI_combo_data <- SCZ_SPI_data_main_repeats %>%
mutate(Analysis = "Pairwise SPI-wise") %>%
plyr::rbind.fill(., SCZ_SPI_combo_data_main_repeats %>%
mutate(Analysis = "Pairwise SPI + Univariate Combo-wise")) %>%
mutate(Analysis = factor(Analysis, levels = c("Pairwise SPI-wise",
"Pairwise SPI + Univariate Combo-wise")))
# currently just using standard student's t-test, need to update
merged_SCZ_SPI_combo_data <- SCZ_SPI_main_repeats %>%
mutate(Analysis = "Pairwise SPI-wise") %>%
plyr::rbind.fill(., SCZ_SPI_combo_main_repeats %>%
mutate(Analysis = "Pairwise SPI + Univariate Combo-wise")) %>%
mutate(Analysis = factor(Analysis, levels = c("Pairwise SPI-wise",
"Pairwise SPI + Univariate Combo-wise")))
merged_SPI_combo_data_avg <- merged_SPI_combo_data %>%
group_by(grouping_var, Analysis) %>%
summarise(mean_balacc = mean(balanced_accuracy, na.rm=T)) %>%
ungroup()
merged_SCZ_SPI_combo_data_avg <- merged_SCZ_SPI_combo_data %>%
group_by(grouping_var, Analysis) %>%
summarise(mean_balacc = mean(balanced_accuracy, na.rm=T)) %>%
ungroup()
# Find SPIs with a significant difference with vs without univariate combo info
sig_SPIs_diff_SCZ <- merged_SCZ_SPI_combo_data %>%
nest(data = -grouping_var) %>%
mutate(test = map(data, ~ t.test(balanced_accuracy ~ Analysis, data = .x, paired=T)),
tidied = map(test, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
mutate(p.adj = p.adjust(p.value, method="BH")) %>%
filter(p.adj < 0.05) %>%
pull(grouping_var)
merged_SCZ_SPI_combo_data_avg %>%
ggplot(data=., mapping=aes(x = Analysis, y = mean_balacc)) +
geom_point(aes(color = Analysis)) +
scale_color_manual(values = c(SPI_only_color, SPI_univar_color)) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15),
expand = c(0, 0.5, 0, 3)) +
geom_line(data = subset(merged_SCZ_SPI_combo_data_avg,
grouping_var %in% sig_SPIs_diff),
aes(x=Analysis, y=mean_balacc, group=grouping_var),
color="black", alpha=0.5) +
ggrepel::geom_text_repel(data = subset(merged_SCZ_SPI_combo_data_avg,
grouping_var %in% sig_SPIs_diff & Analysis == "Pairwise SPI + Univariate Combo-wise"),
aes(label = grouping_var),
hjust=0,
seed         = 42,
force        = 0.5,
force_pull   = 0,
direction    = "y",
segment.size = 0.2,
box.padding  = 0.5,
nudge_x = 0.5) +
ylab("Balanced Accuracy") +
theme(legend.position = "none",
strip.placement = "outside",
strip.background = element_blank(),
strip.text.y.left = element_blank(),
axis.title.x = element_blank())
View(merged_SCZ_SPI_combo_data)
merged_SCZ_SPI_combo_data <- SCZ_SPI_main_repeats %>%
mutate(Analysis = "SPI") %>%
plyr::rbind.fill(., SCZ_SPI_combo_main_repeats %>%
mutate(Analysis = "SPI+combo")) %>%
mutate(Analysis = factor(Analysis, levels = c("SPI",
"SPI+combo")))
t_test_res_SCZ_SPIs <- merged_SCZ_SPI_combo_data %>%
nest(data = -grouping_var) %>%
mutate(test = map(data, ~ t.test(balanced_accuracy ~ Analysis, data = .x, paired=T)),
tidied = map(test, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
mutate(p.adj = p.adjust(p.value, method="BH"))
View(t_test_res_SCZ_SPIs)
t_test_res_SCZ_SPIs <- merged_SCZ_SPI_combo_data %>%
nest(data = -grouping_var) %>%
mutate(test = map(data, ~ t.test(balanced_accuracy ~ Analysis, data = .x, paired=T)),
tidied = map(test, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
mutate(p.adj = p.adjust(p.value, method="BH")) %>%
dplyr::select(-test, -data)
View(t_test_res_SCZ_SPIs)
t_test_res_SCZ_SPIs <- merged_SCZ_SPI_combo_data %>%
nest(data = -grouping_var) %>%
mutate(test = map(data, ~ t.test(balanced_accuracy ~ Analysis, data = .x, paired=T)),
tidied = map(test, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
mutate(t_test_p_adj = p.adjust(p.value, method="BH")) %>%
dplyr::select(-test, -data, -p.value)
merged_SCZ_SPI_combo_data
?t.text
?t.test
t_test_res_SCZ_SPIs <- merged_SCZ_SPI_combo_data %>%
nest(data = -grouping_var) %>%
mutate(test = map(data, ~ t.test(balanced_accuracy ~ Analysis, data = .x, paired=T)),
tidied = map(test, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
mutate(t_test_p_adj = p.adjust(p.value, method="BH")) %>%
dplyr::select(grouping_var, statistic, t_test_p_adj)
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs)
merged_w_t_test <- merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs)
View(merged_w_t_test)
merged_w_t_test %>%
filter(grouping_var == "phi_star_t-1_norm-0")
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
group_by(Analysis) %>%
mutate(tofill = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy,
fill = tofill)) +
geom_violin()
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
group_by(Analysis)
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
rowwise() %>%
mutate(tofill = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy,
fill = tofill)) +
geom_violin()
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_))
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy,
fill = tofill)) +
geom_violin()
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy,
fill = tofill)) +
geom_violin()  +
facet_wrap(grouping_var ~ ., scales="free")
merged_w_t_test %>%
filter(grouping_var %in% c("phi_star_t-1_norm-0",
"anm")) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise()
View(merged_w_t_test)
merged_w_t_test %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy,
fill = tofill)) +
geom_violin()  +
facet_wrap(grouping_var ~ ., scales="free")
merged_w_t_test %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_y") +
ylab("Balanced Accuracy") +
theme(legend.position = "none")
merged_w_t_test %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_y") +
ylab("Balanced Accuracy") +
theme(legend.position = "none")
merged_w_t_test %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed") +
ylab("Balanced Accuracy") +
theme(legend.position = "none")
merged_w_t_test %>%
mutate(Analysis = as.character(rev(Analysis))) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed") +
ylab("Balanced Accuracy") +
theme(legend.position = "none")
merged_w_t_test %>%
mutate(Analysis = factor(Analysis, levels = rev(levels(Analysis)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed") +
ylab("Balanced Accuracy") +
theme(legend.position = "none")
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed") +
ylab("Balanced Accuracy") +
theme(legend.position = "none")
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = Analysis,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed", nrow=1) +
ylab("Balanced Accuracy") +
theme(legend.position = "none") +
theme(axis.text.x = element_blank())
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed", nrow=1) +
ylab("Balanced Accuracy") +
theme(legend.position = "none") +
theme(axis.text.x = element_blank())
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed", nrow=1) +
ylab("Balanced Accuracy") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle=45))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="fixed_y", nrow=1) +
ylab("Balanced Accuracy") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle=45))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_)) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
ylab("Balanced Accuracy") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle=45))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=45))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=45))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=45))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=90))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2),
strip.text = element_blank()) +
theme(axis.text.x = element_text(angle=90))
merged_w_t_test %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=90),
strip.text = element_blank())
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub(" ", "_", as.character(grouping_var)))
