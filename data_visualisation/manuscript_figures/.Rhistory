n1,
n2,
k = 10,
r = 10) {
d <- x - y # Calculate differences
d_bar <- mean(d, na.rm = TRUE) # Calculate mean of differences
sigma_2 <- var(d, na.rm = TRUE) # Calculate variance
sigma_2_mod <- sigma_2 * (1/n + n2/n1) # Calculate modified variance
}
#-------------------------------------------------------------------------------
# Function to read in file with average framewise displacement (FD)
# As well as list of individual subject movement files
# And output a CSV containing the Subject ID, diagnosis, and FD
#-------------------------------------------------------------------------------
compile_movement_data <- function(fd_path,
input_dataset_name,
sample_metadata) {
mov_data <- read.table(paste0(fd_path, sprintf("fdAvgs_%s.txt",
input_dataset_name)))
colnames(mov_data)[1] <- "FD"
mov_data_subjects <- list.files(fd_path, pattern="_movData.txt") %>%
gsub("_movData.txt", "", .)
mov_data$Sample_ID <- mov_data_subjects
mov_data <- mov_data %>%
left_join(., sample_metadata)
return(mov_data)
}
#-------------------------------------------------------------------------------
# Function to read in files containing x, y, and z translation (mm) per subject
# And output a datafrmae containing the Subject ID, diagnosis, and
# mean displacement
#-------------------------------------------------------------------------------
calculate_mean_displacement <- function(movement_data_path,
input_dataset_name,
sample_metadata) {
samples <- list.dirs(movement_data_path, full.names = F, recursive = F)
movement_df_list <- list()
for (sample in samples) {
sample_movement_data <- read.table(paste0(movement_data_path, sample, "/run_1/motions.txt"))
colnames(sample_movement_data) <- c("x_trans", "y_trans", "z_trans",
"x_rot", "y_rot", "z_rot")
sample_movement_data$Sample_ID <- sample
# Calculate mean absolute x, y, and z translation
movement_means <- sample_movement_data %>%
group_by(Sample_ID) %>%
summarise(x_mean = mean(abs(x_trans)),
y_mean = mean(abs(y_trans)),
z_mean = mean(abs(z_trans)))
movement_df_list <- list.append(movement_df_list,
movement_means)
}
movement_df <- do.call(plyr::rbind.fill, movement_df_list)
displacement_data <- movement_df %>%
rowwise() %>%
mutate(mean_displacement = mean(c(x_mean,
y_mean,
z_mean)),
.keep = "unused") %>%
left_join(., sample_metadata)
return(displacement_data)
}
plot_boxplot_shaded_null(dataset_ID = "ABIDE_ASD",
grouping_var_name = "SPI +\nUnivariate Combo",
main_data_by_repeat = SCZ_SPI_combo_main_repeats_sig,
fill_color = "darkgoldenrod2",
wrap_length = 100,
null_mean_value = mean(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T),
null_SD_value = sd(SCZ_SPI_combo_null$balanced_accuracy, na.rm=T))
ggsave(paste0(plot_path, "ABIDE_ASD_SPI_combo_sig_boxplot.png"),
width = 7, height = 3, units="in", dpi=300)
plot_path
# ABIDE ASD
plot_boxplot_shaded_null(dataset_ID = "ABIDE_ASD",
grouping_var_name = "SPI +\nUnivariate Combo",
main_data_by_repeat = ASD_SPI_combo_main_repeats_sig,
fill_color = "darkgoldenrod2",
wrap_length = 100,
null_mean_value = mean(ASD_SPI_combo_null$balanced_accuracy, na.rm=T),
null_SD_value = sd(ASD_SPI_combo_null$balanced_accuracy, na.rm=T))
ggsave(paste0(plot_path, "ABIDE_ASD_SPI_combo_sig_boxplot.png"),
width = 7, height = 3, units="in", dpi=300)
View(ASD_SPI_pvals)
View(ASD_SPI_combo_main_repeats_sig)
View(ASD_SPI_combo_pvals)
merged_SCZ_SPI_combo_data <- SCZ_SPI_main_repeats %>%
mutate(Analysis = "SPI") %>%
plyr::rbind.fill(., SCZ_SPI_combo_main_repeats %>%
mutate(Analysis = "SPI+combo")) %>%
mutate(Analysis = factor(Analysis, levels = c("SPI",
"SPI+combo")))
t_test_res_SCZ_SPIs <- merged_SCZ_SPI_combo_data %>%
nest(data = -grouping_var) %>%
mutate(test = map(data, ~ t.test(balanced_accuracy ~ Analysis, data = .x, paired=T)),
tidied = map(test, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
mutate(t_test_p_adj = p.adjust(p.value, method="BH")) %>%
dplyr::select(grouping_var, statistic, t_test_p_adj)
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=90),
strip.text = element_blank())
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var)))
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
theme(axis.text.x = element_text(angle=90),
strip.text = element_blank())
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scales::scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90),
strip.text = element_blank())
library(scales)
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90),
strip.text = element_blank())
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no")) %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90")) +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var)))
merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no"))
data_to_plot <- merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, "no"),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", "no"))
View(data_to_plot)
data_to_plot <- merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_,
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_))
data_to_plot <- merged_SCZ_SPI_combo_data %>%
data_to_plot <- merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(tofill_violin = ifelse(bal_acc_p_adj < 0.05, Analysis, NA_character_),
tofill_bg = ifelse(t_test_p_adj < 0.05, "yes", NA_character_))
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1)
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = tofill_bg), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = tofill_violin))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("chartreuse3", "darkgoldenrod2", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
data_to_plot <- merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(violin_fill = ifelse(bal_acc_p_adj, paste0(Analysis, "_sig"), Analysis),
t_test_res = ifelse(t_test_p_adj < 0.05, "t_sig", "t_insig"))
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1)
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
data_to_plot <- merged_SCZ_SPI_combo_data %>%
left_join(., t_test_res_SCZ_SPIs) %>%
mutate(grouping_var_char = gsub("_", " ", as.character(grouping_var))) %>%
mutate(grouping_var = factor(grouping_var, levels = rev(levels(grouping_var)))) %>%
mutate(Analysis = as.character(Analysis)) %>%
rowwise() %>%
mutate(violin_fill = ifelse(bal_acc_p_adj < 0.05, paste0(Analysis, "_sig"), Analysis),
t_test_res = ifelse(t_test_p_adj < 0.05, "t_sig", "t_insig"))
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "darkgoldenrod2", "gray90", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1)
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "gray90", "darkgoldenrod2", "gray90", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "gray90", "darkgoldenrod2", "gray90", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "none") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(15)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
ggsave(paste0(plot_path, "UCLA_Schizophrenia_SPI_With_vs_Without_Univariate.png"),
width = 7, height = 5, units = "in", dpi = 300)
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "gray90", "darkgoldenrod2", "gray90", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "none") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(20)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
ggsave(paste0(plot_path, "UCLA_Schizophrenia_SPI_With_vs_Without_Univariate.png"),
width = 8, height = 4, units = "in", dpi = 300)
data_to_plot %>%
ggplot(data=., mapping=aes(x = grouping_var_char,
y = balanced_accuracy)) +
geom_rect(aes(fill = t_test_res), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.3) +
geom_violin(aes(fill = violin_fill))  +
facet_wrap(grouping_var ~ ., scales="free_x", nrow=1) +
scale_fill_manual(values = c("gray90", "chartreuse3", "gray90", "darkgoldenrod2", "gray90", "lightblue1"), na.value="gray90") +
ylab("Balanced Accuracy") +
xlab("SPI") +
theme(legend.position = "none") +
guides(fill = guide_legend(nrow=2)) +
scale_x_discrete(labels = wrap_format(25)) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
strip.text = element_blank())
ggsave(paste0(plot_path, "UCLA_Schizophrenia_SPI_With_vs_Without_Univariate.png"),
width = 8.5, height = 4, units = "in", dpi = 300)
# Once data has been processed with pyspi for di_gaussian 1000x,
# visualise it here
SCZ_pydata_path <- paste0(SCZ_data_path, "raw_data/pydata/")
# Once data has been processed with pyspi for di_gaussian 1000x,
# visualise it here
SCZ_pydata_path <- paste0(SCZ_data_path, "raw_data/pydata/")
all_SPI_100x <- read.csv(paste0(SCZ_pydata_path,
"sub-10159_lh_bankssts_lh_entorhinal_all_SPIs.csv"),
header=F)
View(all_SPI_100x)
all_SPI_100x <- read.csv(paste0(SCZ_pydata_path,
"sub-10159_lh_bankssts_lh_entorhinal_all_SPIs.csv"),
header=F)
View(all_SPI_100x)
all_SPI_100x <- read.csv(paste0(SCZ_pydata_path,
"sub-10159_lh_bankssts_lh_entorhinal_all_SPIs.csv"),
header=T)
View(all_SPI_100x)
all_SPI_100x <- read.csv(paste0(SCZ_pydata_path,
"sub-10159_lh_bankssts_lh_entorhinal_all_SPIs.csv"),
header=T)
View(all_SPI_100x)
all_SPI_100x <- read.csv(paste0(SCZ_pydata_path,
"sub-10159_lh_bankssts_lh_entorhinal_all_SPIs.csv"),
header=T) %>%
dplyr::select(SPI, brain_region_from, brain_region_to, value, Iteration)
View(all_SPI_100x)
all_SPI_100x %>%
group_by(SPI, value) %>%
count()
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
distinct(SPI)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
distinct(SPI)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI) %>%
summarise(value_mean = mean(value, na.rm=T),
value_SD = sd(value, na.rm=T))
length(unique(all_SPI_100x$SPI))
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI) %>%
summarise(value_mean = mean(value, na.rm=T),
value_SD = sd(value, na.rm=T)) %>%
kable() %>%
kable_styling(full_width = F)
library(knitr)
library(kableExtra)
library(theft)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI) %>%
summarise(value_mean = mean(value, na.rm=T),
value_SD = sd(value, na.rm=T)) %>%
kable() %>%
kable_styling(full_width = F)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI) %>%
summarise(value_mean = mean(value, na.rm=T),
value_SD = sd(value, na.rm=T),
num_unique_values = n()) %>%
kable() %>%
kable_styling(full_width = F)
all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI) %>%
summarise(value_mean = mean(value, na.rm=T),
value_SD = sd(value, na.rm=T),
num_unique_values = n()) %>%
arrange(desc(num_unique_values)) %>%
kable() %>%
kable_styling(full_width = F)
non_deterministic_SPIs <- all_SPI_100x %>%
group_by(SPI, value) %>%
count() %>%
filter(n < 100) %>%
ungroup() %>%
group_by(SPI) %>%
summarise(value_mean = mean(value, na.rm=T),
value_SD = sd(value, na.rm=T),
num_unique_values = n()) %>%
arrange(desc(num_unique_values))
non_deterministic_SPIs %>%
kable() %>%
kable_styling(full_width = F)
all_SPI_100x %>%
filter(is.na(value))
all_SPI_100x %>%
filter(is.na(value)) %>%
group_by(SPI) %>%
count()
all_SPI_100x %>%
filter(is.na(value)) %>%
group_by(SPI) %>%
count()%>%
kable() %>%
kable_styling(full_width = F)
