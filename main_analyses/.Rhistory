plot_type = "histogram",
grouping_type = "SPI-wise",
result_color = "#F0224B") +
ggtitle("Results vs. Empirical Null Model") +
theme(legend.position = "right",
plot.title = element_text(size=13))
SPI_wise_sig <- SPI_wise_pvals %>%
filter(bal_acc_p_adj < 0.05)
SPI_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
arrange(bal_acc_p_adj) %>%
dplyr::rename("SPI" = "grouping_var",
"Balanced Accuracy" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
setwd("~/github/fMRI_FeaturesDisorders/main_analyses")
rmarkdown::render(input = "pairwise_analysis_template.Rmd",
output_file = "UCLA_Schizophrenia_Pairwise_Analysis.html",
params = list(data_path = "~/data/UCLA_Schizophrenia/",
dataset_ID = "UCLA_Schizophrenia",
github_dir = "~/github/fMRI_FeaturesDisorders/",
univariate_feature_set = "catch22",
pairwise_feature_set = "pyspi14",
noise_procs = c("AROMA+2P", "AROMA+2P+GMR", "AROMA+2P+DiCER"),
noise_proc_for_null = "AROMA+2P+GMR"))
knitr::opts_chunk$set(echo = F, warning=F, message=F)
univariate_feature_set <- "catch22"
pairwise_feature_set <- "pyspi14"
subject_csv <- "participants.csv"
github_dir <- "D:/Virtual_Machines/Shared_Folder/github/fMRI_FeaturesDisorders/"
dataset_ID <- "UCLA_Schizophrenia"
noise_procs <- c("AROMA+2P", "AROMA+2P+GMR", "AROMA+2P+DiCER")
noise_proc_for_null <- "AROMA+2P+GMR"
ggseg_atlas = "DK"
brain_region_file = "Brain_Region_info.csv"
# UCLA schizophrenia
# data_path <- "D:/Virtual_Machines/Shared_Folder/PhD_work/data/UCLA_Schizophrenia/"
data_path <- "~/data/UCLA_Schizohprenia/"
rdata_path <- paste0(data_path, "processed_data/Rdata/")
brain_region_lookup <- read.csv(paste0(data_path, brain_region_file))
# UCLA schizophrenia
# data_path <- "D:/Virtual_Machines/Shared_Folder/PhD_work/data/UCLA_Schizophrenia/"
data_path <- "~/data/UCLA_Schizohprenia/"
rdata_path <- paste0(data_path, "processed_data/Rdata/")
brain_region_lookup <- read.csv(paste0(data_path, brain_region_file))
paste0(data_path, brain_region_file)
# UCLA schizophrenia
# data_path <- "D:/Virtual_Machines/Shared_Folder/PhD_work/data/UCLA_Schizophrenia/"
data_path <- "~/data/UCLA_Schizophrenia/"
rdata_path <- paste0(data_path, "processed_data/Rdata/")
brain_region_lookup <- read.csv(paste0(data_path, brain_region_file))
# Source null distribution functions
source(paste0(github_dir, "helper_functions/Visualization.R"))
# univariate_feature_set <- "catch22"
# pairwise_feature_set <- "pyspi14"
# subject_csv <- "participants.csv"
# github_dir <- "D:/Virtual_Machines/Shared_Folder/github/fMRI_FeaturesDisorders/"
github_dir <- "~/github/fMRI_FeaturesDisorders/"
# Source null distribution functions
source(paste0(github_dir, "helper_functions/Visualization.R"))
cat("## Univariate linear SVM results for", dataset_ID, "\n")
# Main vs. null histogram
univariate_region_wise_main <- readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc_across_repeats.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null)
# UCLA_Schizophrenia_ROI_wise_model_permutation_null_catch22_inv_prob.Rds
univariate_region_wise_null <- readRDS(paste0(rdata_path, dataset_ID,
"_ROI_wise_model_permutation_null_",
univariate_feature_set,
"_inv_prob.Rds"))
# Pooled empirical null p-values
univariate_region_wise_pvals <- readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_model_permutation_null_",
univariate_feature_set,
"_inv_prob_pvals.Rds"))
# Define xmin and xmax
xmin = 0.99 * min(c(min(univariate_region_wise_main$balanced_accuracy)),
c(min(univariate_region_wise_null$balanced_accuracy)))
xmax = 1.01 * max(c(max(univariate_region_wise_main$balanced_accuracy)),
c(max(univariate_region_wise_null$balanced_accuracy)))
plot_main_vs_null_bal_acc(main_res = univariate_region_wise_main,
null_res = univariate_region_wise_null,
pvals = univariate_region_wise_pvals,
noise_proc = noise_proc_for_null,
xmin = xmin,
xmax = xmax,
plot_type = "histogram",
grouping_type = "Region-wise",
result_color = "#F0224B") +
ggtitle("Results vs. Empirical Null Model") +
theme(legend.position = "right",
plot.title = element_text(size=13))
univariate_region_wise_sig <- univariate_region_wise_pvals %>%
filter(bal_acc_p_adj < 0.05)
univariate_region_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj)
univariate_region_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy))
univariate_region_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 4),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T, big.mark = ","))
univariate_region_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 4),
bal_acc_p_adj = round(format(bal_acc_p_adj, scientific = T,
big.mark = ","), round=2)) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj")
univariate_region_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 4),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_region_wise_sig %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 2),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null)
readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T))
univariate_region_wise_main <- readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = SD(mean_balanced_accuracy, na.rm=T))
univariate_region_wise_main <- readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
xmin = 0.99 * min(c(min(univariate_region_wise_main$balanced_accuracy)),
c(min(univariate_region_wise_null$balanced_accuracy)))
xmax = 1.01 * max(c(max(univariate_region_wise_main$balanced_accuracy)),
c(max(univariate_region_wise_null$balanced_accuracy)))
plot_main_vs_null_bal_acc(main_res = univariate_region_wise_main,
null_res = univariate_region_wise_null,
pvals = univariate_region_wise_pvals,
noise_proc = noise_proc_for_null,
xmin = xmin,
xmax = xmax,
plot_type = "histogram",
grouping_type = "Region-wise",
result_color = "#F0224B") +
ggtitle("Results vs. Empirical Null Model") +
theme(legend.position = "right",
plot.title = element_text(size=13))
univariate_region_wise_main <- readRDS(paste0(rdata_path,
"ROI_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
xmin = 0.99 * min(c(min(univariate_region_wise_main$balanced_accuracy)),
c(min(univariate_region_wise_null$balanced_accuracy)))
xmax = 1.01 * max(c(max(univariate_region_wise_main$balanced_accuracy)),
c(max(univariate_region_wise_null$balanced_accuracy)))
plot_main_vs_null_bal_acc(main_res = univariate_region_wise_main,
null_res = univariate_region_wise_null,
pvals = univariate_region_wise_pvals,
noise_proc = noise_proc_for_null,
xmin = xmin,
xmax = xmax,
plot_type = "histogram",
grouping_type = "Region-wise",
result_color = "#F0224B") +
ggtitle("Results vs. Empirical Null Model") +
theme(legend.position = "right",
plot.title = element_text(size=13))
univariate_region_wise_pvals %>%
filter(bal_acc_p_adj < 0.05)
univariate_region_wise_pvals %>%
filter(bal_acc_p_adj < 0.05)
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
left_join(., univariate_region_wise_main)
univariate_region_wise_pvals %>%
filter(bal_acc_p_adj < 0.05) %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
left_join(., univariate_region_wise_main)
univariate_region_wise_sig <- univariate_region_wise_pvals %>%
filter(bal_acc_p_adj < 0.05) %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
left_join(., univariate_region_wise_main)
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 2),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ","))
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 2),
SD = round(100*SD, 2),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy" = "balanced_accuracy",
"SD Across Repeats" = "SD",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = round(100*balanced_accuracy, 2),
SD = round(100*SD, 2),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy" = "balanced_accuracy",
"SD Across Repeats" = "SD",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = paste0(round(100*balanced_accuracy, 2), ),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy ± SD" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = paste0(round(100*balanced_accuracy, 2), "±", SD),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy ± SD" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = paste0(round(100*balanced_accuracy, 2), "±", round(100*SD, 2)),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy ± SD" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_region_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = paste0(round(100*balanced_accuracy, 2), " ± ", round(100*SD, 2)),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::select(-SD) %>%
dplyr::rename("Brain Region" = "grouping_var",
"Balanced Accuracy ± SD" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
# Main vs. null histogram
univariate_feature_wise_main <- readRDS(paste0(rdata_path,
"Feature_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
# UCLA_Schizophrenia_Feature_wise_model_permutation_null_catch22_inv_prob.Rds
univariate_feature_wise_null <- readRDS(paste0(rdata_path, dataset_ID,
"_Feature_wise_model_permutation_null_",
univariate_feature_set,
"_inv_prob.Rds"))
# Pooled empirical null p-values
univariate_feature_wise_pvals <- readRDS(paste0(rdata_path,
"Feature_wise_CV_linear_SVM_model_permutation_null_",
univariate_feature_set,
"_inv_prob_pvals.Rds"))
# Define xmin and xmax
xmin = 0.99 * min(c(min(univariate_feature_wise_main$balanced_accuracy)),
c(min(univariate_feature_wise_null$balanced_accuracy)))
xmax = 1.01 * max(c(max(univariate_feature_wise_main$balanced_accuracy)),
c(max(univariate_feature_wise_null$balanced_accuracy)))
plot_main_vs_null_bal_acc(main_res = univariate_feature_wise_main,
null_res = univariate_feature_wise_null,
pvals = univariate_feature_wise_pvals,
noise_proc = noise_proc_for_null,
xmin = xmin,
xmax = xmax,
plot_type = "histogram",
grouping_type = "Feature-wise",
result_color = "#5C86C6") +
ggtitle("Results vs. Empirical Null Model") +
theme(legend.position = "right",
plot.title = element_text(size=13))
univariate_feature_wise_sig <- univariate_feature_wise_pvals %>%
filter(bal_acc_p_adj < 0.05) %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
left_join(., univariate_feature_wise_main)
univariate_feature_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = paste0(round(100*balanced_accuracy, 2), " ± ", round(100*SD, 2)),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::select(-SD) %>%
dplyr::rename("catch22 feature" = "grouping_var",
"Balanced Accuracy ± SD" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
univariate_combo_wise_main <- readRDS(paste0(rdata_path,
"Combo_wise_CV_linear_SVM_",
univariate_combo_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
univariate_combo_wise_main <- readRDS(paste0(rdata_path,
"Combo_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
# Main vs. null histogram
univariate_combo_wise_main <- readRDS(paste0(rdata_path,
"Combo_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
# Pooled empirical null p-values
univariate_combo_wise_pvals <- readRDS(paste0(rdata_path,
"Combo_wise_CV_linear_SVM_model_permutation_null_",
univariate_feature_set,
"_inv_prob_pvals.Rds"))
# Define xmin and xmax
xmin = 0.99 * min(c(min(univariate_combo_wise_main$balanced_accuracy)),
c(min(univariate_combo_wise_null$balanced_accuracy)))
univariate_combo_wise_null <- readRDS(paste0(rdata_path, dataset_ID,
"_Combo_wise_model_persmutation_null_",
univariate_feature_set,
"_inv_prob.Rds"))
univariate_combo_wise_null <- readRDS(paste0(rdata_path, dataset_ID,
"_Combo_wise_model_permutation_null_",
univariate_feature_set,
"_inv_prob.Rds"))
# Main vs. null histogram
univariate_combo_wise_main <- readRDS(paste0(rdata_path,
"Combo_wise_CV_linear_SVM_",
univariate_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(grouping_var, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(grouping_var, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
# UCLA_Schizophrenia_Combo_wise_model_permutation_null_catch22_inv_prob.Rds
univariate_combo_wise_null <- readRDS(paste0(rdata_path, dataset_ID,
"_Combo_wise_model_permutation_null_",
univariate_feature_set,
"_inv_prob.Rds"))
# Pooled empirical null p-values
univariate_combo_wise_pvals <- readRDS(paste0(rdata_path,
"Combo_wise_CV_linear_SVM_model_permutation_null_",
univariate_feature_set,
"_inv_prob_pvals.Rds"))
# Define xmin and xmax
xmin = 0.99 * min(c(min(univariate_combo_wise_main$balanced_accuracy)),
c(min(univariate_combo_wise_null$balanced_accuracy)))
xmax = 1.01 * max(c(max(univariate_combo_wise_main$balanced_accuracy)),
c(max(univariate_combo_wise_null$balanced_accuracy)))
plot_main_vs_null_bal_acc(main_res = univariate_combo_wise_main,
null_res = univariate_combo_wise_null,
pvals = univariate_combo_wise_pvals,
noise_proc = noise_proc_for_null,
xmin = xmin,
xmax = xmax,
line_only = TRUE,
plot_type = "histogram",
grouping_type = "Combo-wise",
result_color = "#9B51B4") +
ggtitle("Results vs. Empirical Null Model") +
theme(legend.position = "right",
plot.title = element_text(size=13))
univariate_combo_wise_sig <- univariate_combo_wise_pvals %>%
filter(bal_acc_p_adj < 0.05) %>%
ungroup() %>%
dplyr::select(grouping_var, balanced_accuracy, bal_acc_p_adj) %>%
left_join(., univariate_combo_wise_main)
univariate_combo_wise_sig %>%
arrange(bal_acc_p_adj, desc(balanced_accuracy)) %>%
dplyr::select(grouping_var, balanced_accuracy, SD, bal_acc_p_adj) %>%
mutate(balanced_accuracy = paste0(round(100*balanced_accuracy, 2), " ± ", round(100*SD, 2)),
bal_acc_p_adj = format(bal_acc_p_adj, scientific = T,
big.mark = ",")) %>%
dplyr::select(-SD) %>%
dplyr::rename("Region/Feature Combo" = "grouping_var",
"Balanced Accuracy ± SD" = "balanced_accuracy",
"BH-adjusted p value" = "bal_acc_p_adj") %>%
knitr::kable(.) %>%
kableExtra::kable_styling(full_width=F)
rmarkdown::render(input = "univariate_analysis_template.Rmd",
output_file = "UCLA_Schizophrenia_Univariate_Analysis.html",
params = list(data_path = "~/data/UCLA_Schizophrenia/",
dataset_ID = "UCLA_Schizophrenia",
github_dir = "~/github/fMRI_FeaturesDisorders/",
univariate_feature_set = "catch22",
pairwise_feature_set = "pyspi14",
ggseg_atlas = "DK",
brain_region_file = "Brain_Region_info.csv",
noise_procs = c("AROMA+2P", "AROMA+2P+GMR", "AROMA+2P+DiCER"),
noise_proc_for_null = "AROMA+2P+GMR"))
rmarkdown::render(input = "univariate_analysis_template.Rmd",
output_file = "UCLA_Schizophrenia_Univariate_Analysis.html",
params = list(data_path = "~/data/UCLA_Schizophrenia/",
dataset_ID = "UCLA_Schizophrenia",
github_dir = "~/github/fMRI_FeaturesDisorders/",
univariate_feature_set = "catch22",
pairwise_feature_set = "pyspi14",
ggseg_atlas = "DK",
brain_region_file = "Brain_Region_info.csv",
noise_procs = c("AROMA+2P", "AROMA+2P+GMR", "AROMA+2P+DiCER"),
noise_proc_for_null = "AROMA+2P+GMR"))
rmarkdown::render(input = "pairwise_analysis_template.Rmd",
output_file = "UCLA_Schizophrenia_Pairwise_Analysis.html",
params = list(data_path = "~/data/UCLA_Schizophrenia/",
dataset_ID = "UCLA_Schizophrenia",
github_dir = "~/github/fMRI_FeaturesDisorders/",
univariate_feature_set = "catch22",
pairwise_feature_set = "pyspi14",
ggseg_atlas = "DK",
brain_region_file = "Brain_Region_info.csv",
noise_procs = c("AROMA+2P", "AROMA+2P+GMR", "AROMA+2P+DiCER"),
noise_proc_for_null = "AROMA+2P+GMR"))
SPI_wise_main <- readRDS(paste0(rdata_path,
"SPI_wise_CV_linear_SVM_",
pairwise_feature_set,
"_inv_prob_balacc.Rds")) %>%
dplyr::filter(Noise_Proc == noise_proc_for_null) %>%
group_by(SPI, Sample_Type, Noise_Proc, repeat_number) %>%
summarise(mean_balanced_accuracy = mean(balanced_accuracy, na.rm=T)) %>%
group_by(SPI, Sample_Type, Noise_Proc) %>%
summarise(balanced_accuracy = mean(mean_balanced_accuracy, na.rm=T),
SD = sd(mean_balanced_accuracy, na.rm=T))
