univariate_feature_set <- "catch22"
subject_csv <- "participants.csv"
github_dir <- "/headnode1/abry4213/github/fMRI_FeaturesDisorders/"
data_path <- "/headnode1/abry4213/data/ABIDE_ASD/"
dataset_ID <- "ABIDE_ASD"
noise_procs <- c("FC1000")
brain_region_lookup <- "Harvard_Oxford_cort_prob_2mm_ROI_lookup.csv"
rdata_path <- paste0(data_path, "processed_data/Rdata/")
plot_dir <- paste0(data_path, "plots/")
icesTAF::mkdir(plot_dir)
library(tidyverse)
library(theft)
helper_script_dir = paste0(github_dir, "helper_functions/")
source(paste0(helper_script_dir, "data_prep_and_QC/TS_feature_extraction.R"))
source(paste0(helper_script_dir, "data_prep_and_QC/QC_functions.R"))
system(sprintf("Rscript %s/data_prep_and_QC/dataset_specific_files/prepare_%s_time_series.R",
github_dir, dataset_ID))
# Load brain region lookup table
brain_region_lookup_table <- read.csv(paste0(data_path, brain_region_lookup))
read_in_sample_TS_data <- function(sample_ID, noise_proc,
brain_region_lookup_table) {
noise_label <- gsub("\\+", "_", noise_proc)
TS_data <- read.csv(paste0(data_path,
"raw_data/time_series_files/",
noise_label, "/",
sample_ID, "_TS.csv")) %>%
mutate(timepoint = 1:nrow(.)) %>%
pivot_longer(cols = c(-timepoint),
names_to = "Index",
values_to = "values") %>%
mutate(Sample_ID = sample_ID,
Noise_Proc = noise_proc,
Index = as.numeric(gsub("X", "", Index))) %>%
left_join(., brain_region_lookup_table) %>%
dplyr::select(Sample_ID, Noise_Proc, Brain_Region, timepoint, values)
}
if (!file.exists(paste0(data_path, "raw_data/", dataset_ID, "_fMRI_TS.Rds"))) {
noise_proc_TS_data_list <- list()
for (noise_proc in noise_procs) {
noise_label <- gsub("\\+", "_", noise_proc)
sample_IDs <- list.files(paste0(data_path, "raw_data/time_series_files/", noise_label)) %>%
gsub("_TS.csv", "", .)
np_TS_data <- sample_IDs %>%
purrr::map_df(~ read_in_sample_TS_data(sample_ID = .x,
noise_proc = noise_proc,
brain_region_lookup_table = brain_region_lookup_table))
noise_proc_TS_data_list <- list.append(noise_proc_TS_data_list, np_TS_data)
}
full_TS_data <- do.call(plyr::rbind.fill, noise_proc_TS_data_list)
saveRDS(full_TS_data, paste0(data_path, "raw_data/",
dataset_ID, "_fMRI_TS.Rds"))
} else {
full_TS_data <- readRDS(paste0(data_path, "raw_data/",
dataset_ID, "_fMRI_TS.Rds"))
}
list.append <- function (.data, ...)
{
if (is.list(.data)) {
c(.data, list(...))
}
else {
c(.data, ..., recursive = FALSE)
}
}
noise_proc_TS_data_list <- list.append(noise_proc_TS_data_list, np_TS_data)
full_TS_data <- do.call(plyr::rbind.fill, noise_proc_TS_data_list)
saveRDS(full_TS_data, paste0(data_path, "raw_data/",
dataset_ID, "_fMRI_TS.Rds"))
catch22_all_samples(full_TS_data = full_TS_data,
rdata_path = rdata_path,
dataset_ID = dataset_ID,
unique_columns = c("Sample_ID", "Brain_Region", "Noise_Proc"),
output_column_names = c("Sample_ID", "Brain_Region", "Noise_Proc"))
catch22_all_samples(full_TS_data = full_TS_data,
rdata_path = rdata_path,
dataset_ID = dataset_ID,
unique_columns = c("Sample_ID", "Brain_Region", "Noise_Proc"),
output_column_names = c("Sample_ID", "Brain_Region", "Noise_Proc"))
