source("~/github/fMRI_FeaturesDisorders/classification_functions/univariate_classification.R", echo=TRUE)
install.packages("rlist")
univariate_feature_set <- "catch22"
subject_csv <- "participants.csv"
github_dir <- "/headnode1/abry4213/github/fMRI_FeaturesDisorders/"
rdata_path <- "/headnode1/abry4213/data/UCLA_Schizophrenia/Rdata/"
data_path <- "/headnode1/abry4213/data/UCLA_Schizophrenia/"
dataset_ID <- "UCLA_Schizophrenia"
noise_procs <- c("AROMA+2P", "AROMA+2P+GMR", "AROMA+2P+DiCER")
noise_proc = "AROMA_2P_GMR"
feature_set = "pyspi_19"
input_dataset_name = "UCLA_Schizophrenia"
pydata_path <- "/headnode1/abry4213/data/UCLA_Schizophrenia/pydata/"
# Load in pairwise data for this noise processing method
TS_feature_data <- readRDS(paste0(pydata_path, sprintf("%s_pairwise_%s.Rds",
noise_proc,
feature_set)))
TS_feature_data %>%
group_by(Sample_ID, Noise_Proc, SPI) %>%
filter(all(is.na(value))) %>%
ungroup() %>%
distinct(Sample_ID, Noise_Proc, SPI) %>%
group_by(Sample_ID, Noise_Proc) %>%
dplyr::summarise(num_na = n()) %>%
# Only want to see subjects with NA for more than one feature
filter(num_na > 1) %>%
tidyr::pivot_wider(id_cols=Sample_ID, names_from=Noise_Proc, values_from=num_na) %>%
mutate_all(~replace(., is.na(.), 0))
TS_feature_data %>%
group_by(Sample_ID, Noise_Proc, SPI) %>%
filter(all(is.na(value))) %>%
ungroup() %>%
distinct(Sample_ID, Noise_Proc, SPI)
TS_feature_data %>%
group_by(SPI, Noise_Proc) %>%
filter(all(is.na(value))) %>%
distinct(SPI, Noise_Proc)
unique(TS_feature_data$SPI)
summary(subset(TS_feature_data, SPI=="sgc_parametric_mean_fs-1_fmin-0_fmax-0-5_order-None"))
subset(TS_feature_data, SPI=="sgc_parametric_mean_fs-1_fmin-0_fmax-0-5_order-None") %>% summarise(num_na = sum(is.na(value)), num_non_na = sum(!is.na(value)))
length(unique(TS_feature_data$Sample_ID))
unique(TS_feature_data$Sample_ID)
